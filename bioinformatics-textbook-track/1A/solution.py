from collections import Counter
from itertools import takewhile

SEQUENCE = 'ACGTTGCATGTCGCATGATGCATGAGAGCT'
K = 4

INPUT_SEQ = 'ACTTCGACGGGCGATACACACTTCGACGGGCGATACACGCGATACACCGGTCGGACGCGATACACACTTCGACGGCCCCTGTTCCCCTGTTACTTCGACGGCCCCTGTTACTTCGACGGTTTTTCCCGACTTCGACGGTTTTTCCCGCGGTCGGACTTTTTCCCGTTTTTCCCGACTTCGACGGTTTTTCCCGTTTTTCCCGTTTTTCCCGCGGTCGGACACTTCGACGGGCGATACACCCCCTGTTGCGATACACCGGTCGGACGCGATACACTTTTTCCCGGCGATACACGCGATACACACTTCGACGGCCCCTGTTCCCCTGTTGCGATACACGCGATACACCCCCTGTTCCCCTGTTCGGTCGGACTTTTTCCCGCCCCTGTTCGGTCGGACCGGTCGGACCCCCTGTTACTTCGACGGACTTCGACGGGCGATACACGCGATACACCCCCTGTTACTTCGACGGCCCCTGTTCCCCTGTTCGGTCGGACCGGTCGGACCCCCTGTTGCGATACACCCCCTGTTTTTTTCCCGACTTCGACGGGCGATACACCCCCTGTTCCCCTGTTGCGATACACACTTCGACGGCGGTCGGACGCGATACACCCCCTGTTCGGTCGGACCCCCTGTTGCGATACACACTTCGACGGGCGATACACCCCCTGTTCGGTCGGACCGGTCGGACCCCCTGTTACTTCGACGGACTTCGACGGGCGATACACGCGATACACCCCCTGTTGCGATACACTTTTTCCCGGCGATACACACTTCGACGGCGGTCGGACGCGATACACGCGATACACTTTTTCCCGACTTCGACGGGCGATACACACTTCGACGGTTTTTCCCGCGGTCGGACCGGTCGGACACTTCGACGGCCCCTGTTGCGATACACCGGTCGGACCCCCTGTT'
INPUT_COUNT = 12

def frequent_kmer(sequence: str, k: int):

    kmers = []
    counter = Counter()
    len_seq = len(sequence)

    for i in range(0, len_seq):

        if (i + k) < len_seq:
            kmers.append(sequence[i:i+k])

    for kmer in kmers:
        counter[kmer] = sequence.count(kmer)

    highest_count = counter.most_common(1)[0][1]

    top = list(takewhile(lambda x: x[1]==highest_count, counter.most_common()))

    return [x[0] for x in top]

test_case = frequent_kmer("ACGTTGCATGTCGCATGATGCATGAGAGCT", 4)

assert 'CATG' in test_case
assert 'GCAT' in test_case


results = frequent_kmer(INPUT_SEQ, INPUT_COUNT)

print(' '.join(results))

