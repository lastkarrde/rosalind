let input_sequence = "GACCTCGCTAGTAGAGCCCCGAGAAGCGCCTACTTGCGGTAAGAACGAAAATATGCGTCGCAGTGTTCAGAAAGCTATTGCTCGCGCACCTTATGAGCACGGCTTGATGCGCCAGAATTGGGGGAATGGGAGCTTAGGTATCATCGCGACCGCAAAGGTCATCTCCGGCCCCTACACTTGTTTTATCGTCTACCTTAATCAGTCCATATCATTAAGGCAAGCTCCAATGAGTATTAACTGGTTAGTTTGATAGCATCCGGTCCTAGCTCGAAGGGAGGTGGTGTCGGCCGTATCTGAAATAACTAATCTTCCGAGTTCCTCGGAGATTTCCGCGAATTCCTTCGCCATAGCGCAATCTAGTTCCTAGATTCAGAACGATCTGCAGCAAAGATCTCACACAGAATCGGCTCAGAGACAAGGGCACTACAATAAGACTGGCTATAACAGCGGCGCGATAGAGTTGGTATGAACCTTAGTTAGCCCGGTGACCAGACATAAGAGAAATTACTCCGTACATGCACACTCGCCGTTGAGTTCGGACCTAGAAAGCCTGCTTCATAGCCTGTGTCAGTTTCGCTGATGACGACCACGGTTGGAGTCGACGCATTCCCATTGAAGTAGGTGCTACACTAAGCTGCCGGGGAACCGCGTGGGTCCATAGTGCGCGGTCGCTGTTACAACAGAGAGTGGTAAGTCGATGATGAGCCACATCGGGTACCACGCTACATACGTGTTTCAATCAGAAGACGGTAAGGAAGGGAATGTGGTGGGCTATGGACTGATGTCGGCTCTCACCCCGTATTACT"
type NucleotideCount = {
    a: int
    c: int
    g: int
    t: int
}

let count_nucleotides (input:string) = 
    // Count the number of times A, C, G, T are in the input string 
    
    let sequence = List.ofSeq input
    
    let a = sequence |> List.filter (fun c -> c = 'A') |> List.length
    let t = sequence |> List.filter (fun c -> c = 'T') |> List.length
    let g = sequence |> List.filter (fun c -> c = 'G') |> List.length
    let c = sequence |> List.filter (fun c -> c = 'C') |> List.length
    
    { a=a; c=c; g=g; t=t }
    
let nucleotide_count = count_nucleotides input_sequence
    
printfn "%d %d %d %d" nucleotide_count.a nucleotide_count.c nucleotide_count.g nucleotide_count.t
