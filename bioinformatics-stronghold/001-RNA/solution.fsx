let inputSequence = "CAGCCTATTGCATACAACGTACTTGTGTACTCTCCCCACCCCTGGCAGATAAACATGCATAGATCCTACAATATCTGCAGGGTACGACTGGTGCGCGCCCTGCCACGATGGTCAGTACCCGGGTCTCCCAAGTAACCCGACGAATCGAGGCCTTCATGTCCACAGGTCAAGCCCTTTTCAAAGTTCATCTTAGTCGGATATCGAATCTAACTGTCCATAGGCCACACATAAGTCGGTTGGTGCGGCCAATAATTGAGTTCGCTTAGGATTTTGCGTCAAGTGCGAAACGATGAGGTCTTTCCCAAGTGATCCACCTGCTTATCATATCCTCTATTGCGCCGTTGTTAGATGATCGGGTGACAGTATGAAGATTATCTTGTTGTCCTCGTGGAGATAGGCTATATTTGTCATCGCACATGCGTCTTGCGGGTATTCAGGCATACACACATTGGGGATCGTGAGCGTTTCTCCCTGTATCCCTAACAAAACGAACAGATCAAGAACAGTTGCTCCTTTAAGATCCGTTGCCCGACTCGCGGGTTAAGTCAACAGGGAGTATTCCCCCCCCTAGAACGTAAGTGGGTCGAGACGCTTTGCCACATGGCACCCTGTTGATTACAATATACTAGCCTTAGTAACTCGAGAAAAAGTACGCAGATAGTACTTCCACGGATTGCATGCGTAGCGCTCTGGCTTACGTTGTTTCCCAACCTGTGCCTATGACGGTTTGTGCCATCTAATAACAGCACCGCTGCGCGTCCGCCAGGGTGGAGGTGGTTGTGCCTGAGCGCTGACGCGATCTCCACCCGAATCCAACCTTTTTAACATGCGCTTCTCGCTTACAGCAACGATCCATTACCACTAGCTGCTCATGGGGGACAGCCTTATAACCTTCTTCATACTGGAGCATTAAGCATGGGAGACCGCTTATAATACAACTTCCGCAAAGTTGGGTGGCGAGATGGTGATCTGGGTCCCGACG"


let translate (nucleotide: char) = 
    // Translate T into U, otherwise just return the character

    match nucleotide with
        | 'T' -> 'U'
        | _ -> nucleotide
        
        
let outputSequence = inputSequence
                        |> List.ofSeq
                        |> List.map translate
                        |> System.String.Concat

        
printfn "%s" outputSequence
